while True:
    input_value = input("q를 입력하면 종료됩니다.")
    if input_value == 'a': break
print("프로그램을 종료합니다")



n= int(input("시작하는 정수입력"))
m= int(input("끝나는 정수입력"))

total = 0
for i in range(n,m+1):
    total +=i
print("{}부터 {}까지의 합은 {}입니다.".format(n,m,total))


n= int(input("시작하는 정수입력"))
m= int(input("끝나는 정수입력"))

i = n
total = 0
while i <=m:
    total +=i
    i+=1
print('{} 부터 {}까지 합은 {}입니다'.format(n,m,total))


-----------------------------------------------
딕셔너리 자료형 
- key:value로 이루어져 있음 
- 비시퀀스(순서없는) 자료형 -> 인덱스 x
- 특정 값에 접근할 수 있는 값


() -> tuple
[] -> list
{} -> dictionary(key:value), set(key)

dict는 빈괄호 만들떄 {} /  set은 key만 가지는데 빈것을 만들때는 함수로만 만들 수 있음 



<조회예제>
a = str(input("과일 이름을 입력하세요"))
dict = {'사과':1000 , '바나나':700 , '오렌지':1500 , '파인애플':2000} 
print('{}의 가격은 {}원 입니다.'.format(a,dict[a]))



<입력에 따른 딕셔너리값>
name = input("이름을 기입해주세요").split(' ')
weigth = input("몸무게를 입력해주세요").split(' ')
dict = { name[0] : weigth[0] , name[1] : weigth[1] , name[2] : weigth[2] , name[3] : weigth[3] }


<리스트 comprehenson>
- prac_result = [ i**2 for i in range(1,10)]
  print(prac_result)

- prac_result2 = [ i for i in range(1,10,2)]
  print(prac_result2)

-prac_result3 = [ i for i in 'abcdefghijkz']
 print(prac_result3)

-prac_result3 = [ i for i in 'abcdefghijkz']
 print(prac_result3)

-prac_result5 = [i for i in [prac_result4]*4] 
 print(prac_result5)

-prac_result5 = [prac_result4 for i in range(4)]
 print(prac_result5)


<개념>
슬라이싱 ->도려내서 뽑아내는것이 아닌 새로운 객체를 만들어 반환







