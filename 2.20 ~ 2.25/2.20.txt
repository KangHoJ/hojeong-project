- int 일떄 
- 리스트를 슬라이싱으로 복사,copy로 복사를 하면 다른 객체 새로하나 생김 (객채는 다르나 값은 동일)
-> 하나의 리스트 변경해도 다른 리스트에 영향을 미치지 않음

- 변수를 만들어서 복사를 했을떄 객체가 동일한 객체를 보개 만든다 



- 리스트 안에 리스트가 있을때 
얕은복사 - 리스트안에 리스트를 변경했을때 같은 객체를 바라보고 있어서 한번에 반영 되버림   
( 같은 주소값을 가지게 되어서 각각의 요소는 같다 = 같은 값을 바라보게 된다.)
깊은복사 - 안에 있는것 까지 별개로 복사를 함



<리스트 컴프리헨션 여러개 사용경우>
- expression for 변수 in iterable for 변수 in iterable 일떄 
  앞에 1,2,3 뒤에 3,4,5 면 (1,3) -> (1,4) -> ..... (3,4) 이런 순서로 진행이 된다 .

- 가독성 좋게 만드는법
[expression for 변수 in iterable 
	   for 변수 in iterable 
 	   for 변수 in iterable ] 

- random randint (1,100)  -> 1~100 중 랜덤으로 생성 

- 세트(set) 자료형 -> 비시퀀스형 이며 중복이 없다 
